- name: Install Rancher 2 on top of kubernetes cluster setup via RKE
  hosts: bastion
  vars:
    local_bin_dir: "~/.local/bin"
  tasks:
    - name: Upload rancher2 master kube_config file
      copy:
        src: "kube_config_rancher-cluster.yml"
        dest: "~/.kube/config"

    - name: Upload dev kube_config file
      copy:
        src: "kube_config_dev-cluster.yml"
        dest: "~/kube_config_dev-cluster.yml"

    - name: Check Cluster is UP & RUNNING
      shell: "{{ local_bin_dir }}/kubectl get nodes"

    - name: Init Helm
      block:
        - name: helm repo add stable https://kubernetes-charts.storage.googleapis.com/
          shell: "{{ local_bin_dir }}/helm repo add stable https://kubernetes-charts.storage.googleapis.com/"

    - name: Install Cert Manager
      block:
        - name: kubectl apply -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.12/deploy/manifests/00-crds.yaml
          shell: "{{ local_bin_dir }}/kubectl apply -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.12/deploy/manifests/00-crds.yaml"

        - name: kubectl create namespace cert-manager
          shell: "if ! {{ local_bin_dir }}/kubectl get namespace cert-manager; then {{ local_bin_dir }}/kubectl create namespace cert-manager; fi"

        - name: helm repo add jetstack https://charts.jetstack.io
          shell: "{{ local_bin_dir }}/helm repo add jetstack https://charts.jetstack.io"

        - name: helm repo update
          shell: "{{ local_bin_dir }}/helm repo update"

        - name: helm install cert-manager jetstack/cert-manager --namespace cert-manager --version v0.12.0
          shell: "if ! {{ local_bin_dir }}/helm status -n cert-manager cert-manager; then {{ local_bin_dir }}/helm install cert-manager jetstack/cert-manager --namespace cert-manager --version v0.12.0; fi"

        - name: kubectl -n cert-manager rollout status deploy/cert-manager
          shell: "{{ local_bin_dir }}/kubectl -n cert-manager rollout status deploy/cert-manager"

        - name: kubectl -n cert-manager rollout status deploy/cert-manager-cainjector
          shell: "{{ local_bin_dir }}/kubectl -n cert-manager rollout status deploy/cert-manager-cainjector"

        - name: kubectl -n cert-manager rollout status deploy/cert-manager-webhook
          shell: "{{ local_bin_dir }}/kubectl -n cert-manager rollout status deploy/cert-manager-webhook"

        - name: kubectl get pods --namespace cert-manager
          shell: "{{ local_bin_dir }}/kubectl get pods --namespace cert-manager"

    - name: Install Rancher2
      block:
        - name: helm repo add rancher-stable https://releases.rancher.com/server-charts/stable
          shell: "{{ local_bin_dir }}/helm repo add rancher-stable https://releases.rancher.com/server-charts/stable"

        - name: kubectl create namespace cattle-system
          shell: "if ! {{ local_bin_dir }}/kubectl get namespace cattle-system; then {{ local_bin_dir }}/kubectl create namespace cattle-system; fi"

        - name: install rancher rancher-stable/rancher --namespace cattle-system --set hostname={{ rancher_lb_dns }}
          shell: "if ! {{ local_bin_dir }}/helm status -n cattle-system rancher; then {{ local_bin_dir }}/helm install rancher rancher-stable/rancher --namespace cattle-system --set hostname={{ rancher_lb_dns }}; fi"

        - name: kubectl -n cattle-system rollout status deploy/rancher
          shell: "{{ local_bin_dir }}/kubectl -n cattle-system rollout status deploy/rancher"

        - name: Create storage class for aws-ebs
          shell: |
            {{ local_bin_dir }}/kubectl apply -f - <<COINCOIN
              kind: StorageClass
              apiVersion: storage.k8s.io/v1
              metadata:
                name: aws.pg2.default
              provisioner: kubernetes.io/aws-ebs
              parameters:
                type: gp2
                zones: "{{ aws_region }}a, {{ aws_region }}b, {{ aws_region }}c"
              reclaimPolicy: Retain
              allowVolumeExpansion: true
              mountOptions:
              - debug
              volumeBindingMode: Immediate
            COINCOIN

        - name: get rancher admin password
          shell: "{{ local_bin_dir }}/kubectl -n cattle-system exec $(kubectl -n cattle-system get pods -l app=rancher | grep '1/1' | head -1 | awk '{ print $1 }') -- reset-password | tail -n 1 > rancher_admin_password.txt"

